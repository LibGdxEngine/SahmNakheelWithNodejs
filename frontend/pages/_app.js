import Head from "next/head";

import { AnimatePresence } from "framer-motion";
import Router, { useRouter } from "next/router";
import NProgress from "nprogress"; //nprogress module
import "../styles/nprogress.css";
import "../styles/style.css";
import Modal from "react-modal";
import { useEffect } from "react";
import polygon2 from "../public/images/svgs/Polygon 2.svg";

import { LoginUser } from "../redux/userSlice";
import { wrapper } from "../redux/userStore";
import { getCookie } from "../actions/auth";
import { Provider, useDispatch } from "react-redux";
import "../styles/global.css";

import Image from "next/image";
Modal.setAppElement("#__next");

import { GoogleFonts } from "next-google-fonts";
// const poppins = Poppins({
//   subsets: ["latin"],
//   weight: "100",
//   variable: "--font-mont",
// });

//Binding events.
Router.events.on("routeChangeStart", () => NProgress.start());
Router.events.on("routeChangeComplete", () => NProgress.done());
Router.events.on("routeChangeError", () => NProgress.done());

function MyApp({ Component, pageProps }) {
  const router = useRouter();

  const dispatch = useDispatch();
  const { store, props } = wrapper.useWrappedStore(pageProps);
  useEffect(() => {
    const token = getCookie("token");
    if (token) {
      dispatch(LoginUser(token));
    }
  }, []);
  return (
    <>

      <Head>
        <title>Sahm Nakheel</title>
        <meta name="description" content="Generated by Sahm Nakheel" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
   

        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      </Head>
      <main
        style={{ fontFamily: "poppins", fontWeight: "800", fontSize: "40px" }}
        className={`flex flex-col bg-light dark:bg-dark w-full min-h-screen `}
      >
        <div className="absolute left-[60%] top-[0%] translate-x-[-0%] sm:top-0 z-0 sm:hidden">
          <Image src={polygon2} alt="" className="w-full h-auto" />
        </div>
        {/* <Navebar scrollToTarget={scrollToTarget} /> */}
        <Provider store={store}>
          <AnimatePresence mode="wait">
            <Component key={router.asPath} {...pageProps} />
          </AnimatePresence>
        </Provider>
        {/* <Footer /> */}
      </main>
    </>
  );
}

export default wrapper.withRedux(MyApp);
